import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans


donnees = np.array([0.5010082721710205,0.6592699289321899, #WRIST x0

    0.36255306005477905,0.5974749326705933,  #x1 
    0.276938796043396,0.5025959610939026,   #x2 
    0.22593119740486145,0.42221760749816895, #x3 
    0.15036290884017944,0.37385886907577515, #x4 

    0.4191056489944458,0.37138381600379944, #x5 
    0.41351309418678284,0.25422441959381104, #x6 
    0.41464316844940186,0.17732501029968262, #x7 
    0.42243197560310364,0.11197352409362793, #x8 


    0.5290688872337341,0.3707753121852875, #x9
    0.5661934614181519,0.23351775109767914, #x10
    0.5878496170043945,0.1411399096250534, #x11
    0.602681577205658,0.06484001874923706, #x12

    0.624642014503479,0.39766979217529297, #x13 
    0.6822277307510376,0.27606552839279175, #x14
    0.714309811592102,0.1903025358915329, #x15
    0.7361772060394287,0.11531594395637512, #x16 

    0.706964373588562,0.44802165031433105, #x17
    0.8120367527008057,0.3749253451824188, #x18
    0.8822271823883057,0.3215057849884033, #x19
    0.9404727220535278,0.27071863412857056]) #x20 




donnees_blessures = np.array([
    0.8822271823883057,0.3215057849884033,
    0.5290688872337341,0.3707753121852875,
    0.4191056489944458,0.37138381600379944,
    0.5010082721710205,0.6592699289321899,
    0.5878496170043945,0.1411399096250534,
    0.8120367527008057,0.3749253451824188,
    0.714309811592102,0.1903025358915329,
    0.41351309418678284,0.25422441959381104,
    0.4191056489944458,0.37138381600379944,
    0.36255306005477905,0.5974749326705933,
    0.4191056489944458,0.37138381600379944, 
    0.5661934614181519,0.23351775109767914,
    0.5290688872337341,0.3707753121852875, 
    0.706964373588562,0.44802165031433105,
    0.36255306005477905,0.5974749326705933,
    0.276938796043396,0.5025959610939026,
    0.714309811592102,0.1903025358915329,
    0.36255306005477905,0.5974749326705933, 
    0.602681577205658,0.06484001874923706,
    0.5010082721710205,0.6592699289321899,
    0.5661934614181519,0.23351775109767914,
     0.5661934614181519,0.23351775109767914,
    0.41351309418678284,0.25422441959381104, 
    0.4191056489944458,0.37138381600379944, 
    0.714309811592102,0.1903025358915329,
    0.706964373588562,0.44802165031433105,
    0.41351309418678284,0.25422441959381104,
    0.602681577205658,0.06484001874923706,
    0.706964373588562,0.44802165031433105,
    0.5661934614181519,0.23351775109767914,
    0.5661934614181519,0.23351775109767914,
    0.5010082721710205,0.6592699289321899,
    0.36255306005477905,0.5974749326705933,
    0.4191056489944458,0.37138381600379944,
    0.5290688872337341,0.3707753121852875, 
    0.5661934614181519,0.23351775109767914,
    0.706964373588562,0.44802165031433105,
    0.8822271823883057,0.3215057849884033,
    0.276938796043396,0.5025959610939026,
    0.5010082721710205,0.6592699289321899,
    0.36255306005477905,0.5974749326705933,
    0.8822271823883057,0.3215057849884033,
    0.706964373588562,0.44802165031433105, 
    0.602681577205658,0.06484001874923706,   
    0.4191056489944458,0.37138381600379944, 
    0.7361772060394287,0.11531594395637512,
    0.706964373588562,0.44802165031433105,
    0.5878496170043945,0.1411399096250534,
    0.41351309418678284,0.25422441959381104,
    0.5010082721710205,0.6592699289321899,
    ])

# Redimensionnez l'array pour qu'il ait 21 lignes et 2 colonnes
main = donnees.reshape(21, 2)

# Spécifiez le nombre de clusters (par exemple, 5 doigts sur une main)
n_clusters = 1

# Créez un objet KMeans et ajustez-le aux données
kmeans_model = KMeans(n_clusters=n_clusters)
kmeans_model.fit(main)




blessures = donnees_blessures.reshape(-1, 2)
nombre_clusters = 14 # Changez cette valeur pour ajuster le nombre de clusters
kmeans_blessures = KMeans(n_clusters=nombre_clusters)
kmeans_blessures.fit(blessures)

#compter les duplicates
unique_indices, unique_counts = np.unique(blessures, return_counts=True, axis=0)
duplicates = unique_indices[unique_counts > 1]
duplicate_counts = unique_counts[unique_counts > 1]


# Normalize the counts to a suitable range for marker sizes
marker_sizes = (duplicate_counts - 1) * 50


# Visualisez les données et les clusters
plt.scatter(main[:, 0], main[:, 1], c=kmeans_model.labels_, cmap='viridis')

for i in range(len(duplicates)):
    plt.scatter(duplicates[i, 0], duplicates[i, 1], c='red', marker='x', s=marker_sizes[i])

# Visualisez les centres des clusters
plt.scatter(kmeans_blessures.cluster_centers_[:, 0], kmeans_blessures.cluster_centers_[:, 1], c='orange', marker='x')

# Affichez le graphique
plt.title("Visualisation des zones les plus touchées d'une main")
#plt.xlabel("X")
#plt.ylabel("Y")
plt.show()






